### 
// Authentication Endpoints
// 1. Login and get access token
POST {{baseUrl}}/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

username=admin&password=admin

### 
// 2. Access a protected route
GET {{baseUrl}}/protected HTTP/1.1
Authorization: Bearer {{apiKey}}
Content-Type: application/json



### 
// User Management Endpoints
// 1. Fetch all users
GET {{baseUrl}}/users HTTP/1.1
Authorization: Bearer {{apiKey}}
Content-Type: application/json

### 
// 2. Register a new user
POST {{baseUrl}}/user HTTP/1.1
Authorization: Bearer {{apiKey}}
Content-Type: application/json

{
  "username": "test_reza",
  "password": "reza1234",
  "email": "reza@gmail.com",
  "is_admin": false
}

###
// 3. Fetch details of a user by ID.
GET {{baseUrl}}/users/2 HTTP/1.1
Authorization: Bearer {{apiKey}}
Content-Type: application/json

### 
// 4. Update a user by ID
PUT {{baseUrl}}/users/2 HTTP/1.1
Authorization: Bearer {{apiKey}}
Content-Type: application/json

{
  "username": "rezaBG",
  "password": "reza1234-12",
  "email": "email@gmail.com"
}

###
// 5. Delete a user by ID 
DELETE {{baseUrl}}/users/3 HTTP/1.1
Authorization: Bearer {{apiKey}}
Content-Type: application/json

###
// Task Management Endpoints
// 1. Create a new task
POST http://localhost:8000/tasks HTTP/1.1
Authorization: Bearer {{apiKey}}
Content-Type: application/json

{
  "title": "New Task",
  "description": "A sample task",
  "status": "pending", 
  "owner_id": 1
}


###
// 2. Retrieve all tasks for the authenticated user
GET http://localhost:8000/tasks HTTP/1.1
Authorization: Bearer {{apiKey}}
Content-Type: application/json

###
// 3. Retrieve a task by ID
GET http://localhost:8000/tasks/1 HTTP
Authorization: Bearer {{apiKey}}
Content-Type: application/json

###
// 4. Update a task by ID
PUT http://localhost:8000/tasks/1 HTTP
Authorization: Bearer {{apiKey}}
Content-Type: application/json

{
  "title": "Updated Task",
  "description": "An updated task",
  "status": "completed"
}

###
// 5. Delete a task by ID
DELETE http://localhost:8000/tasks/1 HTTP
Authorization: Bearer {{apiKey}}
Content-Type: application/json

###
// 6. Retrieve all tasks filtered by status
GET http://localhost:8000/tasks?status=pending HTTP
Authorization: Bearer {{apiKey}}
Content-Type: application/json
